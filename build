#!/usr/bin/env bash

build() {
  declare build_files="${*:-versions/**/options}"

  for file in $build_files; do
    (
      source "$file"
      local version_dir
      version_dir="$(dirname "$file")"
      : "${TAGS:?}" "${BUILD_OPTIONS:?}" "${RELEASE:?}"

      for tag in "${TAGS[@]}"; do
        docker build ${BUILD_OPTIONS[@]} -t "$tag" "$version_dir"
      done
    )
  done
}

push() {
  declare build_files="${*:-versions/**/options}"
  for file in $build_files; do
    (
      source "$file"
      for tag in "${TAGS[@]}"; do
        if docker history "$tag" &> /dev/null; then
          docker push "$tag"
        fi
      done
      exit 0
    )
  done
}

run_tests() {
  declare build_files="${*:-versions/**/options}"
  declare -a test_files
  for file in $build_files; do
    source "$file"
    local tag
    tag="${TAGS[0]}" tag="${tag//:/-}" tag="${tag//\//_}"
    test_files+=("test/test_${tag}.bats")
  done
  bats "${test_files[@]}"
}

new_version() {
  declare version=$1
  declare ast=${2:-0.1.5}
  declare template_files="${3:-templates/}"

  mkdir -p "versions/${version}"
  for file in $template_files/versions/*; do
    (
      sed "s:{{.VERSION}}:${version}:g;s:{{.AST}}:${ast}:g"<"$file">"versions/${version}/$(basename "$file")"
    )
  done
  chmod +x "versions/${version}/docker-entrypoint.sh"

  sed "s:{{.VERSION}}:${version}:g"<"templates/test/test_cloudflare_phan.bats">"test/test_cloudflare_phan-${version}.bats"
}

main() {
  set -eo pipefail; [[ "$TRACE" ]] && set -x
  declare cmd="$1"
  case "$cmd" in
    test) shift; run_tests "$@";;
    push) shift; push "$@";;
    version) shift; new_version "$@";;
    *) build "$@";;
  esac
}

main "$@"
